// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AimAndShoot.h"
#include "Commands/Ascend.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/Descend.h"
#include "Commands/DriveStraight.h"
//#include "Commands/GetBoilerData.h"
//#include "Commands/GetGearData.h"
#include "Commands/Hold.h"
#include "Commands/IntakeOff.h"
#include "Commands/IntakeOn.h"
#include "Commands/MecanumDrive.h"
#include "Commands/Off.h"
#include "Commands/Shoot.h"
#include "Commands/Stop.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    joystick1.reset(new Joystick(0));
    
    joystickButton8.reset(new JoystickButton(joystick1.get(), 8));
    joystickButton8->WhileHeld(new IntakeOn());
    joystickButton2.reset(new JoystickButton(joystick1.get(), 2));
    joystickButton2->WhenPressed(new AimAndShoot());
    joystickButton1.reset(new JoystickButton(joystick1.get(), 1));
    joystickButton1->WhileHeld(new Shoot());

    // SmartDashboard Buttons
    SmartDashboard::PutData("IntakeOff", new IntakeOff());
    SmartDashboard::PutData("IntakeOn", new IntakeOn());
    SmartDashboard::PutData("DriveStraight", new DriveStraight(0.3));
    SmartDashboard::PutData("Stop", new Stop());
    SmartDashboard::PutData("MecanumDrive", new MecanumDrive());
    SmartDashboard::PutData("Hold", new Hold());
    SmartDashboard::PutData("Descend", new Descend());
    SmartDashboard::PutData("Ascend", new Ascend());
    SmartDashboard::PutData("AimAndShoot", new AimAndShoot());
    SmartDashboard::PutData("Off", new Off());
    SmartDashboard::PutData("Shoot", new Shoot());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getJoystick1() {
   return joystick1;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
