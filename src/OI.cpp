// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AimAndShoot.h"
#include "Commands/AlignToBoiler.h"
#include "Commands/AlignToGear.h"
#include "Commands/Ascend.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/CenterGearAuto.h"
#include "Commands/Descend.h"
#include "Commands/DriveStraight.h"
#include "Commands/Hold.h"
#include "Commands/IntakeOff.h"
#include "Commands/IntakeOn.h"
#include "Commands/LeftGearAuto.h"
#include "Commands/MecanumDrive.h"
#include "Commands/Off.h"
#include "Commands/RightGearAuto.h"
#include "Commands/ShootKicker.h"
#include "Commands/ShootSpinner.h"
#include "Commands/Stop.h"
#include "Commands/TurnToAngle.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "Commands/ComboAlignToGear.h"

//#include "Commands/GetBoilerData.h"
//#include "Commands/GetGearData.h"

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    joystick1.reset(new Joystick(0));
    
    leftBumper.reset(new JoystickButton(joystick1.get(), 6));
    leftBumper->WhileHeld(new AlignToBoiler());
    rightBumper.reset(new JoystickButton(joystick1.get(), 5));
    rightBumper->WhileHeld(new AlignToGear());
    joystickButton2.reset(new JoystickButton(joystick1.get(), 8));
    joystickButton2->WhileHeld(new Ascend());
    joystickButton1.reset(new JoystickButton(joystick1.get(), 2));
    joystickButton1->WhileHeld(new ShootKicker());

    // SmartDashboard Buttons
    SmartDashboard::PutData("RightGearAuto", new RightGearAuto());
    SmartDashboard::PutData("CenterGearAuto", new CenterGearAuto());
    SmartDashboard::PutData("LeftGearAuto", new LeftGearAuto());
    SmartDashboard::PutData("DriveStraight", new DriveStraight(1.0, 0.5));
    SmartDashboard::PutData("AlignToBoiler", new AlignToBoiler());
    SmartDashboard::PutData("AlignToGear", new AlignToGear());
    SmartDashboard::PutData("TurnToAngle", new TurnToAngle(60));
    SmartDashboard::PutData("ShootSpinner", new ShootSpinner());
    SmartDashboard::PutData("ShootKicker", new ShootKicker());
    SmartDashboard::PutData("IntakeOff", new IntakeOff());
    SmartDashboard::PutData("IntakeOn", new IntakeOn());
    SmartDashboard::PutData("Stop", new Stop());
    SmartDashboard::PutData("MecanumDrive", new MecanumDrive());
    SmartDashboard::PutData("Hold", new Hold());
    SmartDashboard::PutData("Descend", new Descend());
    SmartDashboard::PutData("Ascend", new Ascend());
    SmartDashboard::PutData("AimAndShoot", new AimAndShoot());
    SmartDashboard::PutData("Off", new Off());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getJoystick1() {
   return joystick1;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
